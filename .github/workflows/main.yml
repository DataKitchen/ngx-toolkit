name: Test - Build - Version and Deploy

on:
  push:
    branches:
      - master

jobs:

  Test_Lint:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          fetch-depth: 0

      - name: Set git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file,
          # and set up auth to read in from env.NODE_AUTH_TOKEN.
          # Default: ''
          registry-url: 'https://registry.npmjs.org/'

      - name: Install
        run: yarn install --frozon-lockfile

      - name: Test
        run: |
          yarn test:ci

      - name: Lint
        run: |
          yarn lint:ci


  Publish:
    runs-on: ubuntu-latest
    needs: Test_Lint
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          fetch-depth: 0

      - name: Set git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file,
          # and set up auth to read in from env.NODE_AUTH_TOKEN.
          # Default: ''
          registry-url: 'https://registry.npmjs.org/'

      - name: Install
        run: yarn install --frozon-lockfile

      - name: Version
        run: |
          yarn deploy:ci
        # this will call lerna publish.
        # Please note the `--contents dist` option https://www.npmjs.com/package/@lerna/publish#--contents-dir
        # this implies that each package MUST generate its own artifacts in a dist folder within itself
        # for the angular libraries this is done by angular-cli which will also copy over a package.json file
        # for other packages the `package.json` file must be copied manually
        #
        # Also note that relative lifecycle hook will still run in the original folder
        # and here we leverage the prepack lifecycle hook to build each package
        # This voids the build step done before a probably we can get rid of it for now I'm just leaving it
        # so that the pipeline stops earlier if for any reason the build fails.
        env:
          GH_TOKEN: ${{ github.token }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  Deploy:
    runs-on: ubuntu-latest
    needs: Version_Build
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          fetch-depth: 0

      - name: Set git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          # cache: 'yarn'
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file,
          # and set up auth to read in from env.NODE_AUTH_TOKEN.
          # Default: ''
          registry-url: 'https://registry.npmjs.org/'

      - name: Install
        run: yarn install --frozon-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v4

      - name: Deploy
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          yarn deploy:ci
