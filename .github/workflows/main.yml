name: Test - Build - Version and Deploy

on:
  # push:
  #   branches:
  #     - master

  pull_request:
    branches: [ master ]

jobs:

  Test_Lint:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          fetch-depth: 0

      - name: Set git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file,
          # and set up auth to read in from env.NODE_AUTH_TOKEN.
          # Default: ''
          registry-url: 'https://registry.npmjs.org/'

      - name: Install
        run: yarn install --frozon-lockfile

      - name: Test
        run: |
          yarn test:ci

      - name: Lint
        run: |
          yarn lint:ci


  Version_Build:
    runs-on: ubuntu-latest
    needs: Test_Lint
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          fetch-depth: 0

      - name: Set git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file,
          # and set up auth to read in from env.NODE_AUTH_TOKEN.
          # Default: ''
          registry-url: 'https://registry.npmjs.org/'

      - name: Install
        run: yarn install --frozon-lockfile

      - name: Version
        run: yarn l version -y --conventional-commits --create-release github --loglevel verbose
        # each package has a `postversion` script that will be executed by lerna
        # according to these rules in lerna version lifecycle hooks
        # https://www.npmjs.com/package/@lerna/version#lifecycle-scripts
        # This way we will have in `dist` only the builds for the packages
        # that actually changed
        env:
          GH_TOKEN: ${{ github.token }}


      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist_folder
          path: |
            dist

  Deploy:
    runs-on: ubuntu-latest
    needs: Version_Build
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          fetch-depth: 0

      - name: Set git user
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          # cache: 'yarn'
          # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file,
          # and set up auth to read in from env.NODE_AUTH_TOKEN.
          # Default: ''
          registry-url: 'https://registry.npmjs.org/'

      - name: Install
        run: yarn install --frozon-lockfile

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Deploy
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          ls -al
          ./scripts/exec_in_subfolders.sh dist 'npm publish --access public'
